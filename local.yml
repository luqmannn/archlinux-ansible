---
- hosts: localhost
  ignore_errors: yes
  connection: local
  become: true
  tasks:

  - name: Update the repository databases and upgrade the system packages.
    tags: always
    pacman:
      update_cache: yes
      upgrade: yes
    when: ansible_distribution == "Archlinux"

- hosts: localhost
  ignore_errors: yes
  connection: local
  become: true
  tasks:

  - name: Remove some xfce4 package
    tags: remove
    package:
      name:
        - mousepad
        - parole
        - xfburn
        - xfce4-xkb-plugin
        - xfce4-dict
        - xfce4-mailwatch-plugin
        - xfce4-notes-plugin
        - xfce4-taskmanager
      state: absent
    when: ansible_distribution == "Archlinux"

  - name: Install additional packages
    tags: install
    package:
      name:
        - jq
        - curl
        - dmenu
        - binutils
        - usbutils
        - net-tools
        - traceroute
        - zip
        - ufw
        - unzip
        - unrar
        - which
        - mlocate
        - man-db
        - tldr
        - arch-audit
        - bash-completion
        - neofetch
        - asciinema
        - terminus-font
        - nano-syntax-highlighting
        - firefox
      state: present
    when: ansible_distribution == "Archlinux"

- hosts: localhost
  ignore_errors: yes
  connection: local
  become: true
  tasks:

  - name: Start system services
    tags: enable_service
    service:
      name: "{{ item.name }}"
      state: started
      enabled: yes
    with_items:
      - { name: 'iptables' }
      - { name: 'sshd' }

  - name: Disable system services
    tags: disable_service
    service:
      name: avahi-daemon
      state: stopped
      enabled: no

- hosts: localhost
  ignore_errors: yes
  connection: local
  become: true
  tasks:

  - name: TCP/IP stack and kernel hardening
    tags: tcpip_harden
    sysctl:
      name: "{{ item.name }}"
      value: "{{ item.value }}"
      sysctl_file: /usr/lib/sysctl.d/50-default.conf
      state: present
      sysctl_set: yes
    with_items:
      # Enable syn flood protection
      - { name: 'net.ipv4.tcp_syncookies', value: '1' }

      # RFC 1337 fix
      - { name: 'net.ipv4.tcp_rfc1337', value: '1' }

      # Reverse path filtering
      - { name: 'net.ipv4.conf.default.rp_filter', value: '1' }  # IP spoofing protection
      - { name: 'net.ipv4.conf.all.rp_filter', value: '1' }  # IP spoofing protection

      # Log packets
      - { name: 'net.ipv4.conf.default.log_martians', value: '1' }  # Log spoofed, source-routed, and redirect packets
      - { name: 'net.ipv4.conf.all.log_martians', value: '1' }  # Log spoofed, source-routed, and redirect packets

      # Ignore icmp echo requests
      - { name: 'net.ipv4.icmp_echo_ignore_all', value: '1' }
      - { name: 'net.ipv6.icmp.echo_ignore_all', value: '1' }

      # File system and kernel hardening
      - { name: 'fs.protected_hardlinks', value: '1' }  # Provide protection from ToCToU races
      - { name: 'fs.protected_symlinks', value: '1' }  # Provide protection from ToCToU races
      - { name: 'kernel.kptr_restrict', value: '1' }  # Make locating kernel addresses more difficult

      # Should only be enabled if necessary by remove hashtag, based on use case.
      #- { name: 'net.ipv4.conf.all.accept_source_route', value: '0' }  # Ignore source-routed packets
      #- { name: 'net.ipv6.conf.all.accept_source_route', value: '0' }  # IPv6 - Ignore ICMP redirects
      #- { name: 'net.ipv4.conf.default.accept_source_route', value: '0' }  # Ignore source-routed packets
      #- { name: 'net.ipv6.conf.default.accept_source_route', value: '0' }  # IPv6 - Ignore source-routed packets
      #- { name: 'net.ipv4.conf.all.accept_redirects', value: '0' }  # Ignore ICMP redirects
      #- { name: 'net.ipv6.conf.all.accept_redirects', value: '0' }  # IPv6 - Ignore ICMP redirects
      #- { name: 'net.ipv4.conf.default.accept_redirects', value: '0' }  # Ignore ICMP redirects
      #- { name: 'net.ipv6.conf.default.accept_redirects', value: '0' }  # IPv6 - Ignore ICMP redirects
      #- { name: 'net.ipv4.conf.default.send_redirects', value: '0' }  # Don't allow traffic between networks or act as a router
      #- { name: 'net.ipv4.conf.all.send_redirects', value: '0' }  # Don't allow traffic between networks or act as a router
      #- { name: 'net.ipv4.ip_forward', value: '0' }  # Do not allow traffic between networks or act as a router
      #- { name: 'net.ipv6.conf.all.forwarding', value: '0' }  # IPv6 - Do not allow traffic between networks or act as a router

- hosts: localhost
  ignore_errors: yes
  connection: local
  become: true
  tasks:

  - name: Incoming deny
    tags: deny_in
    ufw:
      policy: deny
      direction: incoming

  - name: Outgoing deny
    tags: deny_out
    ufw:
      policy: allow
      direction: outgoing

  - name: Allow inbound SSH traffic
    tags: ssh_in
    ufw:
      rule: allow
      port: 2030
      proto: tcp
      direction: in

  - name: Allow outbound SSH traffic
    tags: ssh_out
    ufw:
      rule: allow
      port: 2030
      proto: tcp
      direction: out

#  - name: Allow outbound HTTP traffic
#    tags: http_out
#    ufw:
#      rule: allow
#      direction: out
#      proto: tcp
#      port: 80

#  - name: Allow outbound HTTPS traffic
#    tags: https_out
#    ufw:
#      rule: allow
#      direction: out
#      proto: tcp
#      port: 443

  - name: Enable firewall
    tags: ufw_on
    ufw:
      state: enabled

# Checklist to do:
# - Pull all stuff from GitHub repo (bin, config, fonts, wallpaper, bashrc)
#   - Copy all bin into /usr/local/bin
#   - Copy all config into ~/.config
#   - Copy all fonts to /usr/share/fonts and run fc-cache -fv
#   - Copy all wallpaper to ~/Pictures
#   - Put bashrc in ~
